# Copyright (C) 2023 Reece H. Dunn. SPDX-License-Identifier: Apache-2.0
name: Build Kotlin/Multiplatform
on: [ push ]

jobs:
  xqt-kotlinx-json-rpc:
    runs-on: ubuntu-latest
    steps:
      - name: Source Code Checkout
        uses: actions/checkout@v3
        with:
          repository: rhdunn/xqt-kotlinx-json-rpc
          ref: master

      - name: Setup Gradle 7.5
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5

      - name: Publish Kotlin/Multiplatform to Maven Local
        run: gradle publishKotlinMultiplatformPublicationToMavenLocal

      - name: Tar XQT Kotlin JSON-RPC Artifacts
        run: tar -cvf xqt-kotlinx-json-rpc-common.tar -C ~/.m2/repository/io/github/rhdunn .

      - name: Upload XQT Kotlin JSON-RPC Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: xqt-kotlinx-json-rpc-common
          path: xqt-kotlinx-json-rpc-common.tar

  build:
    needs: xqt-kotlinx-json-rpc
    runs-on: ubuntu-latest
    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
      SIGNING_KEY_PRIVATE: ${{ secrets.SIGNING_KEY_PRIVATE }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
    steps:
      - name: Source Code Checkout
        uses: actions/checkout@v3

      - name: Setup Gradle 7.5
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5

      - name: Download XQT Kotlin JSON-RPC Artifacts
        uses: actions/download-artifact@v3
        with:
          name: xqt-kotlinx-json-rpc-common

      - name: Extract XQT Kotlin JSON-RPC Artifacts to Maven Local
        run: |
          mkdir -p ~/.m2/repository/io/github/rhdunn
          tar -xvf xqt-kotlinx-json-rpc-common.tar -C ~/.m2/repository/io/github/rhdunn

      - name: Build for Kotlin/Multiplatform metadata JAR
        run: gradle allMetadataJar

      - name: Build for Kotlin/Multiplatform Kotlin tooling metadata
        run: gradle buildKotlinToolingMetadata

      - name: Publish Kotlin/Multiplatform to Maven Local
        run: gradle -D maven.sign=env publishKotlinMultiplatformPublicationToMavenLocal

      - name: Publish Kotlin/Multiplatform to Maven Central
        if: env.OSSRH_USERNAME
        run: gradle -D maven.sign=env publishKotlinMultiplatformPublicationToMavenCentral
